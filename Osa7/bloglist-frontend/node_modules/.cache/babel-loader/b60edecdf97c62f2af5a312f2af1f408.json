{"ast":null,"code":"let timeoutId;\n\nconst reducer = (store = null, action) => {\n  console.log('action:', action);\n\n  switch (action.type) {\n    case 'SET_NOTIFICATION':\n      return action.notification;\n\n    default:\n      return store;\n  }\n};\n\nexport const notify = (message, type, seconds) => {\n  return async dispatch => {\n    dispatch({\n      type: 'SET_NOTIFICATION',\n      notification: {\n        message,\n        type\n      }\n    });\n\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n    }\n\n    timeoutId = setTimeout(() => dispatch({\n      type: 'SET_NOTIFICATION',\n      notification: null\n    }), seconds * 1000);\n  };\n};\nexport default reducer;","map":{"version":3,"sources":["/home/local/esksami/AAA-Backup/School_N/FullStackPalautuksetHashtag2020/Osa7/bloglist-frontend/src/reducers/notificationReducer.js"],"names":["timeoutId","reducer","store","action","console","log","type","notification","notify","message","seconds","dispatch","clearTimeout","setTimeout"],"mappings":"AAAA,IAAIA,SAAJ;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG,IAAT,EAAeC,MAAf,KAA0B;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,MAAvB;;AAEA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAK,kBAAL;AACE,aAAOH,MAAM,CAACI,YAAd;;AACF;AACE,aAAOL,KAAP;AAJJ;AAMD,CATD;;AAWA,OAAO,MAAMM,MAAM,GAAG,CAACC,OAAD,EAAUH,IAAV,EAAgBI,OAAhB,KAA4B;AAChD,SAAO,MAAOC,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAAC;AACPL,MAAAA,IAAI,EAAE,kBADC;AAEPC,MAAAA,YAAY,EAAE;AAAEE,QAAAA,OAAF;AAAWH,QAAAA;AAAX;AAFP,KAAD,CAAR;;AAKA,QAAIN,SAAJ,EAAe;AACbY,MAAAA,YAAY,CAACZ,SAAD,CAAZ;AACD;;AAEDA,IAAAA,SAAS,GAAGa,UAAU,CAAC,MAAMF,QAAQ,CAAC;AACpCL,MAAAA,IAAI,EAAE,kBAD8B;AAEpCC,MAAAA,YAAY,EAAE;AAFsB,KAAD,CAAf,EAGlBG,OAAO,GAAG,IAHQ,CAAtB;AAID,GAdD;AAeD,CAhBM;AAmBP,eAAeT,OAAf","sourcesContent":["let timeoutId\n\nconst reducer = (store = null, action) => {\n  console.log('action:', action)\n\n  switch (action.type) {\n    case 'SET_NOTIFICATION':\n      return action.notification\n    default:\n      return store\n  }\n}\n\nexport const notify = (message, type, seconds) => {\n  return async (dispatch) => {\n    dispatch({\n      type: 'SET_NOTIFICATION',\n      notification: { message, type }\n    })\n\n    if (timeoutId) {\n      clearTimeout(timeoutId)\n    }\n\n    timeoutId = setTimeout(() => dispatch({\n      type: 'SET_NOTIFICATION',\n      notification: null\n    }), seconds * 1000)\n  }\n}\n\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}