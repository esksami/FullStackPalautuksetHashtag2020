{"ast":null,"code":"var _jsxFileName = \"/home/local/esksami/AAA-Backup/School_N/FullStackPalautuksetHashtag2020/Osa7/bloglist-frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Blog from './components/Blog';\nimport Notification from './components/Notification';\nimport Togglable from './components/Togglable';\nimport NewBlog from './components/NewBlog';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport storage from './utils/storage';\nimport { notify } from './reducers/notificationReducer';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const notification = useSelector(state => state.notification);\n  const [blogs, setBlogs] = useState([]);\n  const [user, setUser] = useState(null);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  /*  const [notification, setNotification] = useState(null)\n  */\n\n  const blogFormRef = React.createRef();\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs));\n  }, []);\n  useEffect(() => {\n    const user = storage.loadUser();\n    setUser(user);\n  }, []);\n\n  const notifyWith = (message, type = 'success') => {\n    dispatch(notify(message, type, 10));\n    /*    setNotification({\n          message, type\n        })\n        setTimeout(() => {\n          setNotification(null)\n        }, 5000)*/\n  };\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      console.log(user);\n      setUsername('');\n      setPassword('');\n      setUser(user);\n      notifyWith(`${user.name} welcome back!`);\n      storage.saveUser(user);\n    } catch (exception) {\n      notifyWith('wrong username/password', 'error');\n    }\n  };\n\n  const createBlog = async blog => {\n    try {\n      const newBlog = await blogService.create(blog);\n      blogFormRef.current.toggleVisibility();\n      setBlogs(blogs.concat(newBlog));\n      notifyWith(`a new blog '${newBlog.title}' by ${newBlog.author} added!`);\n    } catch (exception) {\n      console.log(exception);\n    }\n  };\n\n  const handleLike = async id => {\n    const blogToLike = blogs.find(b => b.id === id);\n    const likedBlog = { ...blogToLike,\n      likes: blogToLike.likes + 1,\n      user: blogToLike.user.id\n    };\n    await blogService.update(likedBlog);\n    setBlogs(blogs.map(b => b.id === id ? { ...blogToLike,\n      likes: blogToLike.likes + 1\n    } : b));\n  };\n\n  const handleRemove = async id => {\n    const blogToRemove = blogs.find(b => b.id === id);\n    const ok = window.confirm(`Remove blog ${blogToRemove.title} by ${blogToRemove.author}`);\n\n    if (ok) {\n      await blogService.remove(id);\n      setBlogs(blogs.filter(b => b.id !== id));\n    }\n  };\n\n  const handleLogout = () => {\n    setUser(null);\n    storage.logoutUser();\n  };\n\n  if (!user) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, \"login to application\"), /*#__PURE__*/React.createElement(Notification, {\n      notification: notification,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, \"username\", /*#__PURE__*/React.createElement(\"input\", {\n      id: \"username\",\n      value: username,\n      onChange: ({\n        target\n      }) => setUsername(target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, \"password\", /*#__PURE__*/React.createElement(\"input\", {\n      id: \"password\",\n      value: password,\n      onChange: ({\n        target\n      }) => setPassword(target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }, \"login\")));\n  }\n\n  const byLikes = (b1, b2) => b2.likes - b1.likes;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, \"blogs\"), /*#__PURE__*/React.createElement(Notification, {\n    notification: notification,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, user.name, \" logged in \", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 31\n    }\n  }, \"logout\")), /*#__PURE__*/React.createElement(Togglable, {\n    buttonLabel: \"create new blog\",\n    ref: blogFormRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NewBlog, {\n    createBlog: createBlog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  })), blogs.sort(byLikes).map(blog => {\n    console.log('blog', blog);\n    console.log('user', user);\n    return /*#__PURE__*/React.createElement(Blog, {\n      key: blog.id,\n      blog: blog,\n      handleLike: handleLike,\n      handleRemove: handleRemove,\n      own: user.username === (blog.user && blog.user.username),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    });\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/local/esksami/AAA-Backup/School_N/FullStackPalautuksetHashtag2020/Osa7/bloglist-frontend/src/App.js"],"names":["React","useState","useEffect","useSelector","useDispatch","Blog","Notification","Togglable","NewBlog","blogService","loginService","storage","notify","App","dispatch","notification","state","blogs","setBlogs","user","setUser","username","setUsername","password","setPassword","blogFormRef","createRef","getAll","then","loadUser","notifyWith","message","type","handleLogin","event","preventDefault","login","console","log","name","saveUser","exception","createBlog","blog","newBlog","create","current","toggleVisibility","concat","title","author","handleLike","id","blogToLike","find","b","likedBlog","likes","update","map","handleRemove","blogToRemove","ok","window","confirm","remove","filter","handleLogout","logoutUser","target","value","byLikes","b1","b2","sort"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Blog from './components/Blog'\nimport Notification from './components/Notification'\nimport Togglable from './components/Togglable'\nimport NewBlog from './components/NewBlog'\n\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport storage from './utils/storage'\n\nimport { notify } from './reducers/notificationReducer'\n\n\nconst App = () => {\n  const dispatch = useDispatch()\n  const notification = useSelector(state => state.notification)\n\n\n  const [blogs, setBlogs] = useState([])\n  const [user, setUser] = useState(null)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n/*  const [notification, setNotification] = useState(null)\n*/\n  const blogFormRef = React.createRef()\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs(blogs)\n    )\n  }, [])\n\n  useEffect(() => {\n    const user = storage.loadUser()\n    setUser(user)\n  }, [])\n\n  const notifyWith = (message, type='success') => {\n    dispatch(notify(message, type, 10))\n/*    setNotification({\n      message, type\n    })\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)*/\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n\n      console.log(user)\n\n      setUsername('')\n      setPassword('')\n      setUser(user)\n      notifyWith(`${user.name} welcome back!`)\n      storage.saveUser(user)\n    } catch(exception) {\n      notifyWith('wrong username/password', 'error')\n    }\n  }\n\n  const createBlog = async (blog) => {\n    try {\n      const newBlog = await blogService.create(blog)\n      blogFormRef.current.toggleVisibility()\n      setBlogs(blogs.concat(newBlog))\n      notifyWith(`a new blog '${newBlog.title}' by ${newBlog.author} added!`)\n    } catch(exception) {\n      console.log(exception)\n    }\n  }\n\n  const handleLike = async (id) => {\n    const blogToLike = blogs.find(b => b.id === id)\n    const likedBlog = { ...blogToLike, likes: blogToLike.likes + 1, user: blogToLike.user.id }\n    await blogService.update(likedBlog)\n    setBlogs(blogs.map(b => b.id === id ?  { ...blogToLike, likes: blogToLike.likes + 1 } : b))\n  }\n\n  const handleRemove = async (id) => {\n    const blogToRemove = blogs.find(b => b.id === id)\n    const ok = window.confirm(`Remove blog ${blogToRemove.title} by ${blogToRemove.author}`)\n    if (ok) {\n      await blogService.remove(id)\n      setBlogs(blogs.filter(b => b.id !== id))\n    }\n  }\n\n  const handleLogout = () => {\n    setUser(null)\n    storage.logoutUser()\n  }\n\n  if ( !user ) {\n    return (\n      <div>\n        <h2>login to application</h2>\n\n        <Notification notification={notification} />\n\n        <form onSubmit={handleLogin}>\n          <div>\n            username\n            <input\n              id='username'\n              value={username}\n              onChange={({ target }) => setUsername(target.value)}\n            />\n          </div>\n          <div>\n            password\n            <input\n              id='password'\n              value={password}\n              onChange={({ target }) => setPassword(target.value)}\n            />\n          </div>\n          <button id='login'>login</button>\n        </form>\n      </div>\n    )\n  }\n\n  const byLikes = (b1, b2) => b2.likes - b1.likes\n\n  return (\n    <div>\n      <h2>blogs</h2>\n\n      <Notification notification={notification} />\n\n      <p>\n        {user.name} logged in <button onClick={handleLogout}>logout</button>\n      </p>\n\n      <Togglable buttonLabel='create new blog'  ref={blogFormRef}>\n        <NewBlog createBlog={createBlog} />\n      </Togglable>\n\n      {blogs.sort(byLikes).map(blog => {\n        console.log('blog', blog)\n        console.log('user', user)\n        return (<Blog\n          key={blog.id}\n          blog={blog}\n          handleLike={handleLike}\n          handleRemove={handleRemove}\n          own={user.username===(blog.user && blog.user.username)}\n        />)}\n      )}\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}